var ReactPreload =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Preload = exports.ImageHelper = exports.ImageCache = undefined;\n\nvar _ImageCache = __webpack_require__(6);\n\nObject.defineProperty(exports, 'ImageCache', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ImageCache).default;\n  }\n});\n\nvar _ImageHelper = __webpack_require__(7);\n\nObject.defineProperty(exports, 'ImageHelper', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_ImageHelper).default;\n  }\n});\n\nvar _Preload2 = __webpack_require__(8);\n\nvar _Preload3 = _interopRequireDefault(_Preload2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Preload = exports.Preload = _Preload3.default;\n\nexports.default = Preload;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/index.js\n ** module id = 0\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./modules/index.js?");

/***/ },
/* 1 */,
/* 2 */
/***/ function(module, exports) {

	eval("module.exports = React;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 2\n ** module chunks = 0 1\n **/\n//# sourceURL=webpack:///external_%22React%22?");

/***/ },
/* 3 */,
/* 4 */,
/* 5 */,
/* 6 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar hash = {};\nvar cache = [];\n\nvar add = function add(url) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    if (!hash[url]) {\n        hash[url] = new Image();\n\n        if (options.crossOrigin) {\n            hash[url].crossOrigin = options.crossOrigin;\n        }\n\n        hash[url].src = url;\n\n        cache.push(hash[url]);\n    }\n    return hash[url];\n};\n\nvar get = function get(url, options) {\n    return add(url, options);\n};\n\nvar stuff = function stuff(urls, options) {\n    if (urls.length > 0) {\n        urls.map(function (url) {\n            return add(url, options);\n        });\n    }\n};\n\nvar ImageCache = {\n    add: add,\n    stuff: stuff,\n    get: get,\n    hash: hash,\n    cache: cache\n};\n\nexports.default = ImageCache;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/ImageCache.js\n ** module id = 6\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./modules/ImageCache.js?");

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _ImageCache = __webpack_require__(6);\n\nvar _ImageCache2 = _interopRequireDefault(_ImageCache);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ImageHelper = {\n    loadImage: function loadImage(url, options) {\n        var image = _ImageCache2.default.get(url, options);\n\n        return new Promise(function (resolve, reject) {\n            var handleSuccess = function handleSuccess() {\n                resolve(image);\n            };\n            var handleError = function handleError() {\n                reject(new Error('failed to preload ' + url));\n            };\n\n            if (image.complete) {\n                // image is loaded, go ahead and change the state\n\n                if (image.naturalWidth && image.naturalHeight) {\n                    // successful load\n                    handleSuccess();\n                } else {\n                    (function () {\n                        // IE CACHED IMAGES RACE CONDITION\n                        // -------------------------------\n                        // IE11 sometimes reports cached images as image.complete,\n                        // but naturalWidth and naturalHeight = 0.\n                        // A few ms later it will get the dimensions correct,\n                        // so check a few times before rejecting it.\n                        var counter = 1;\n                        var checkDimensions = setInterval(function () {\n                            if (image.naturalWidth && image.naturalHeight) {\n                                window.clearInterval(checkDimensions);\n                                handleSuccess();\n                            }\n                            if (counter === 3) {\n                                window.clearInterval(checkDimensions);\n                                handleError();\n                            }\n                            counter++;\n                        }, 50);\n                    })();\n                }\n            } else {\n                image.addEventListener('load', handleSuccess, false);\n                image.addEventListener('error', handleError, false);\n            }\n        });\n    },\n    loadImages: function loadImages(urls, options) {\n        var _this = this;\n\n        var promises = urls.map(function (url) {\n            return _this.loadImage(url, options);\n        });\n        return Promise.all(promises).catch(function (err) {\n            console.warn(err.message);\n        });\n    },\n\n\n    // preload without caring about the result\n    stuffImages: function stuffImages(urls, options) {\n        _ImageCache2.default.stuff(urls, options);\n    }\n};\n\nexports.default = ImageHelper;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/ImageHelper.js\n ** module id = 7\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./modules/ImageHelper.js?");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ImageHelper = __webpack_require__(7);\n\nvar _ImageHelper2 = _interopRequireDefault(_ImageHelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar propTypes = {\n    // Rendered on success\n    children: _react.PropTypes.element.isRequired,\n\n    // Rendered during load\n    loadingIndicator: _react.PropTypes.node.isRequired,\n\n    // Array of image urls to be preloaded\n    images: _react.PropTypes.array,\n\n    // If set, the preloader will automatically show\n    // the children content after this amount of time\n    autoResolveDelay: _react.PropTypes.number,\n\n    // Error callback. Is passed the error\n    onError: _react.PropTypes.func,\n\n    // Success callback\n    onSuccess: _react.PropTypes.func,\n\n    // Whether or not we should still show the content\n    // even if there is a preloading error\n    resolveOnError: _react.PropTypes.bool,\n\n    // Whether or not we should mount the child content after\n    // images have finished loading (or after autoResolveDelay)\n    mountChildren: _react.PropTypes.bool\n};\n\nvar defaultProps = {\n    images: [],\n    resolveOnError: true,\n    mountChildren: true,\n    loadingIndicator: null\n};\n\nvar Preload = function (_Component) {\n    _inherits(Preload, _Component);\n\n    function Preload(props) {\n        _classCallCheck(this, Preload);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Preload).call(this, props));\n\n        _this.state = {\n            ready: false\n        };\n\n        _this._handleSuccess = _this._handleSuccess.bind(_this);\n        _this._handleError = _this._handleError.bind(_this);\n        _this._mounted = false;\n        return _this;\n    }\n\n    _createClass(Preload, [{\n        key: 'componentWillMount',\n        value: function componentWillMount() {\n            if (!this.props.images || this.props.images.length === 0) {\n                this._handleSuccess();\n            }\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this._mounted = true;\n            if (!this.state.ready) {\n                _ImageHelper2.default.loadImages(this.props.images).then(this._handleSuccess, this._handleError);\n\n                if (this.props.autoResolveDelay && this.props.autoResolveDelay > 0) {\n                    this.autoResolveTimeout = setTimeout(this._handleSuccess, this.props.autoResolveDelay);\n                }\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this._mounted = false;\n            if (this.autoResolveTimeout) {\n                clearTimeout(this.autoResolveTimeout);\n            }\n        }\n    }, {\n        key: '_handleSuccess',\n        value: function _handleSuccess() {\n            if (this.autoResolveTimeout) {\n                clearTimeout(this.autoResolveTimeout);\n                console.warn('images failed to preload, auto resolving');\n            }\n\n            if (this.state.ready || !this._mounted) {\n                return;\n            }\n\n            this.setState({\n                ready: true\n            });\n\n            if (this.props.onSuccess) {\n                this.props.onSuccess();\n            }\n        }\n    }, {\n        key: '_handleError',\n        value: function _handleError(err) {\n\n            if (!this._mounted) {\n                return;\n            }\n\n            if (this.props.resolveOnError) {\n                this._handleSuccess();\n            }\n\n            if (this.props.onError) {\n                this.props.onError(err);\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return this.state.ready && this.props.mountChildren ? this.props.children : this.props.loadingIndicator;\n        }\n    }]);\n\n    return Preload;\n}(_react.Component);\n\nPreload.propTypes = propTypes;\nPreload.defaultProps = defaultProps;\n\nexports.default = Preload;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./modules/Preload.js\n ** module id = 8\n ** module chunks = 1\n **/\n//# sourceURL=webpack:///./modules/Preload.js?");

/***/ }
/******/ ]);